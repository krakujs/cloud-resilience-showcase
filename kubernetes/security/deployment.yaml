apiVersion: apps/v1
kind: Deployment
metadata:
  name: security-scanner
  namespace: security
spec:
  replicas: 1
  selector:
    matchLabels:
      app: security-scanner
  template:
    metadata:
      labels:
        app: security-scanner
    spec:
      serviceAccountName: security-scanner-sa
      containers:
      - name: security-scanner
        image: python:3.10-slim
        command: ["/bin/bash", "-c"]
        args: ["pip install flask kubernetes pyyaml requests schedule && python /app/scanner.py"]
        volumeMounts:
        - name: scanner-code
          mountPath: "/app"
        ports:
        - containerPort: 8080
        resources:
          requests:
            memory: "1Mi"
            cpu: "1m"
          limits:
            memory: "256Mi"
            cpu: "200m"
        readinessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 60
          periodSeconds: 15
      volumes:
      - name: scanner-code
        configMap:
          name: security-scanner-code
---
apiVersion: v1
kind: Service
metadata:
  name: security-scanner
  namespace: security
spec:
  selector:
    app: security-scanner
  ports:
  - port: 80
    targetPort: 8080
  type: ClusterIP
---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: security-scan-trigger
  namespace: security
spec:
  schedule: "0 */6 * * *"  # Every 6 hours
  concurrencyPolicy: Forbid
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - name: curl
            image: curlimages/curl:7.87.0
            command: ["curl", "-X", "POST", "http://security-scanner/api/scan/start"]
          restartPolicy: OnFailure
