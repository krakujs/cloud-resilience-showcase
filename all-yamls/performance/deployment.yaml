apiVersion: apps/v1
kind: Deployment
metadata:
  name: performance-backend
  namespace: performance
spec:
  replicas: 1
  selector:
    matchLabels:
      app: performance-backend
  template:
    metadata:
      labels:
        app: performance-backend
    spec:
      containers:
      - name: performance-backend
        image: node:18-alpine
        command: ["/bin/sh", "-c"]
        args: ["cd /app && npm init -y && npm install express cors morgan axios prom-client && node /app/server.js"]
        volumeMounts:
        - name: backend-code
          mountPath: "/app/server.js"
          subPath: "server.js"
        ports:
        - containerPort: 3000
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "200m"
        readinessProbe:
          httpGet:
            path: /health
            port: 3000
          initialDelaySeconds: 10
          periodSeconds: 5
        livenessProbe:
          httpGet:
            path: /health
            port: 3000
          initialDelaySeconds: 20
          periodSeconds: 15
      volumes:
      - name: backend-code
        configMap:
          name: performance-backend-code
---
apiVersion: v1
kind: Service
metadata:
  name: performance-backend
  namespace: performance
spec:
  selector:
    app: performance-backend
  ports:
  - port: 3000
    targetPort: 3000
  type: ClusterIP